== plus openParen if <> minus closeParen then < star openCurly{ else > / closeCurly for <= = openSquare class >= and closeSquare int ; not /star float , or star/ get . // put : return :: program integer id id id id id id openCurly{ openSquare closeSquare return closeCurly openSquare closeSquare openParen star minus plus plus plus plus closeParen <= <> < // /star star/ id integer float float id integer . put integer or not and == = > > > ; , ; :: : int float float integer . id float . integer id minus integer float id plus integer float id float id 